<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<section xmlns="http://docbook.org/ns/docbook" 
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"  
    xml:id="section.command-shell">
    <title>The command shell - "g7sh"</title>
    <para>The supplied command shell offers the easiest way to control a device and the daemon. The
        shell can be run on either the same server that is running the daemon (the most common case)
        but it is also possible to run the shell on an arbitrary computer as long as <acronym>TCP/IP
        </acronym>connection can be established to the server running the daemon. </para>
    <para>If no command line arguments are given the shell assume that the daemon is running on the
        same machine and tries to find the daemon configuration file and read the settings from
        there.</para>
    <para>To run the command shell from a different computer it is required to add command line
        arguments that specifies the server name and optionally what port the shell should connect
        to.</para>
    <section>
        <title>Command line arguments</title>
        <para>The shell support the following command line arguments</para>
        <para>
            <variablelist>
                <varlistentry>
                    <term><emphasis role="bold">-h, --help</emphasis></term>
                    <listitem>
                        <para>Print help and exit</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">-p <parameter>nnn</parameter>,
                                --port=<parameter>nnn</parameter></emphasis></term>
                    <listitem>
                        <para>What command port to use (by default 3100)</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">-s <parameter>&lt;address></parameter>,
                                --server=<parameter>&lt;address></parameter></emphasis></term>
                    <listitem>
                        <para>The address of the server to connect to either as a domain address or
                            in numeric "dot" format.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">-v, --version</emphasis></term>
                    <listitem>
                        <para>Print shell version and exit</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">-e &lt;command></emphasis></term>
                    <listitem>
                        <para>Run the shell and execute specified command and then quit.Only single
                            commands can be give for each invocation.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </para>
        <para>Use <literal>man g7sh</literal> on the command line to get more information.</para>
    </section>
    <section>
        <title>Basic usage</title>
        <para>The shell can be run either on the same server as the daemon or on a separate
            computer. Assuming the first case the shell can just be invoked as </para>
        <para>
            <screen>> g7sh</screen>
        </para>
        <para>If run from another computer them the server running the dameon must be specified on
            the command line. </para>
        <para>
            <screen>> g7sh -s 192.168.0.10</screen>
        </para>
        <para>The above commands assumes that the ports setup for the daemon are either the standard
            ports or given in the configuration file. If the config file can not be found in the
            common place (i.e. <filename>/etc/g7ctrl/g7ctrl.conf</filename>) then the shell will
            look for a shell specific config file "<filename>.g7sh</filename>" in the users home
            directory. Command line argument will however always override any ini file
            setting.</para>        
    </section>
    <section>
        <title>Configuring the shell as a login shell</title>
            <para>One possible way to use the command shell is to use it as a <emphasis
                role="italic">system login shell</emphasis>. In this way it will be possible to
            login directly to the server by using, for example, <command>ssh</command> (or its
            mobile successor <command>mosh</command>) and connecting as a dedicated user who uses
                <command>g7sh</command> as the default login shell. This has the advantage of
            allowing a secure remote connection directly to the daemon by just connection to the
            server as that user.</para>
            <para>In order to accomplish this there are three things that must be done:</para>
            <para>
                <orderedlist>
                    <listitem>
                    <para>Add the user that should have the command shell as login shell (for
                        example by using <command>useradd</command>)</para>
                </listitem>
                <listitem>
                    <para>Specify <command>g7sh</command> as the login shell for that user. How to
                        do this is system dependent but could for example be done by first adding a
                        line in the <filename>/etc/passwd</filename> file. For example adding the
                        user <literal>g7shell</literal> could be done by adding the line</para>
                    <para>
                        <screen>g7shell:x:0:0:g7ctrl shell user:/home/g7shell:/usr/bin/g7sh</screen>
                    </para>
                    <para>The above line creates a new user called <literal>g7shell</literal> which
                        uses <command>g7sh</command> as login shell. (The '<emphasis role="italic"
                            >x</emphasis>' in the password field indicates that the system is using
                            <emphasis role="italic">shadow passwords</emphasis>). You can also use
                        the system tools you are comfortable with in order to create a new user and
                        specifying that users login shell.</para>
                </listitem>
                    <listitem>
                        <para>Allow <command>g7sh</command> to be used as system shell by adding it
                        to the list of allowed system shells in
                        '<filename>/etc/shells</filename>'</para>
                    </listitem>
                </orderedlist>
            </para>
            <para>After the configuration is done it is simply a matter of login in to the server as
            the user with the <command>g7sh</command> as login shell, for example via
                <command>ssh</command> and give commands and read statuses from the daemon as usual. </para>
                
    </section>
    <section>
        <title>Command line editing and completion</title>
        <para>The shell supports full command line editing. The cmmands are identical to hte one
            used for command line editing in "<literal>bash</literal>" shell (basically a subset of
            commands supported by <literal>emacs</literal>). </para>
        <para>In addition to command line editing the shell also supports context sensitive command
            completion. What this means is that at any time it is possible to use the "tab"-key and
            a list of possible commands are shown. Depdning on what has been written earlier on the
            command line the list will only show commands possible at that point. If a character or
            characters have been typed then only commands starting with those will be shown.</para>
        <para><emphasis role="bold">Example 1.</emphasis> Typing "<literal>ge</literal>" and then
            press "tab" twice and the follwing command completions will be shown (the
                <literal>&lt;TAB></literal> indicates pressing the tab-key)</para>
        <para>
            <screen>g7ctrl> ge<emphasis role="bold">&lt;TAB></emphasis>
g7ctrl> get <emphasis role="bold">&lt;TAB></emphasis>
address  gfen     loc      nrec     roam     sms      vip
batt     gfevt    locg     phone    sens     track    
comm     imei     lowbatt  ps       sim      tz       
config   led      mswitch  rec      sleep    ver      
g7ctrl> get c<emphasis role="bold">&lt;TAB></emphasis>
g7ctrl> get co<emphasis role="bold">n</emphasis><emphasis role="bold">&lt;TAB></emphasis>
g7ctrl> get config</screen>
        </para>
        <para><emphasis role="bold">Example 2.</emphasis> If instead the initial command is
                "<literal>do</literal>" the completion list will be quite different and showing only
            the possible completion for the "<literal>do</literal>" statement.</para>
        <para>
            <screen>g7ctrl> do<emphasis role="bold">&lt;TAB></emphasis>
clrec   dlrec   reboot  reset   test    
g7ctrl> do </screen>
        </para>
        <para><emphasis role="bold">Example 3.</emphasis> Finally , to get a list of all possible
            commands that a line can start with just press tab-key at the empty line</para>
        <para>
            <screen>g7ctrl> <emphasis role="bold">&lt;TAB></emphasis>
.address    .ld         .target     exit        set
.cachestat  .ln         .usb        get         
.date       .nick       .ver        help        
.dn         .ratereset  db          preset      
.lc         .table      do          quit    
g7ctrl> </screen>
        </para>
    </section>
</section>
