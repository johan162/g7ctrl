#define MAX_RESP_FIELDS 12
#define MAX_FIELD_SIZE 32
struct splitfields {
	size_t nf;
	char fld[MAX_RESP_FIELDS][MAX_FIELD_SIZE];
};

size_t 
strlen(char *buffer) {
  size_t n=0;
  while(*buffer++) ++n;
  return n;
}

int
xstrsplitfields(char *buffer, char divider, size_t maxf, struct splitfields *sfields) {

	//xstrtrim_crlf(buffer);
	sfields->nf = 0;
	const size_t len = strlen(buffer);
	if( 1024 == len ) return -1;
	
	char *bptr = buffer;
	char *ptr =NULL;
	while( len > 0 ) {
		++sfields->nf;
		ptr = sfields->fld[sfields->nf];
		while( *bptr != divider && len > 0 ) {
			if( ' ' == *bptr )
				*bptr++;
			else
				*ptr++ = *bptr++;
			--len;
		}
		if( *bptr == divider ) {
			*ptr = '\0';
		    bptr++;
			--len;
		}
	}
	*ptr = '\0';
	return 0;
}

main() {

	char *buffer = "one,two,three";
	struct splitfields sf[12];
	
	xstrsplitfields(buffer,',',12,sf);
	for(int i=0; i<sf.nf; i++) {
	   printf("%s\n",sf.fld[i]);
	}

}