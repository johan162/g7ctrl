<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<section xmlns="http://docbook.org/ns/docbook" 
    xmlns:xlink="http://www.w3.org/1999/xlink" 
    version="5.0"
     xml:id="section.introduction">
    <title>Introduction</title>
    <para>This software is meant to be used together with the <productname>Xtreme GM7</productname>
        <acronym>GPS</acronym> tracker to help simplify its management and to make it possible to
        monitor alerts sent by the tracker. </para>
    <para>The software is intended to be run as a <productname>GNU/Linux</productname> service
        (a.k.a. a daemon) that always runs in the background. The server has a small footprint and
        makes very little use of system resources. It should therefore be possible to run the daemon
        unnoticed and on virtually any <productname>GNU/Linux</productname> systems.</para>
    <para>In the rest of the manual we will often refer to the software as "the daemon". The
        application name for the daemon is "<application>g7ctrl</application>"</para>
    
    <para>
        <figure xml:id="fig.gm7_tracker">
            <title>The GM7 Tracker</title>
            <mediaobject>
                <imageobject role="fo">
                    <imagedata fileref="gm7_tracker_small.jpg" scalefit="1"
                        width="100%" contentwidth="100%"/>
                </imageobject>
                <imageobject role="html">
                    <imagedata fileref="gm7_tracker_small.jpg" scalefit="1"
                        contentwidth="400px"/> 
                </imageobject>
            </mediaobject>
        </figure>
    </para>    
    
    <section>
        <title>Typographic conventions used in the manual</title>
        <para>The manual is consistently formatted to help differentiate the semantic meaning of the
            text as follows:</para>
        <itemizedlist>
            <listitem>
                <para>Terminal text input/output. Example:</para>
                <para>
                    <screen>g7ctrl> command-line</screen>
                </para>
            </listitem>
            <listitem>
                <para>File- or directory name. Example:</para>
                <para><filename>/usr/bin/g7ctrl</filename></para>
            </listitem>
            <listitem>
                <para>File listing. Example:</para>
                <para>
                    <programlisting># This is the first line in the file
# and this is the second line</programlisting>
                </para>
            </listitem>
            <listitem>
                <para>Literal text: Example:</para>
                <para><literal>SIGHUP</literal></para>
            </listitem>
            <listitem>
                <para>Acronym. Example</para>
                <para><acronym>SMTP</acronym></para>
            </listitem>
            <listitem>
                <para>Inline code. Example:</para>
                <para><code>main(int argc, char **argv)</code></para>
            </listitem>
            <listitem>
                <para>Command. Example</para>
                <para><command>useradd</command></para>
            </listitem>
            <listitem>
                <para>Product name. Example</para>
                <para><productname>Xtreme GM7</productname>
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>Why would you want this software?</title>
        <para>While it is possible to manage the <productname>GM7 GPS Tracker</productname>
            (commonly referred to as "the device" in this manual) through the means of sending phone
            text messages this is often awkward since it requires the user to remember specific
            commands and the corresponding arguments. At best this is a complex and tedious way to
            control the device. In addition there is also a cost associated for sending each text
            messages both in the sending phone and for the <acronym>SIM</acronym> subscription in
            the device since the tracker will normally will send back a reply. Even when the cost in
            itself is not of concern the risk of emptying the device <acronym>SIM</acronym> account
            increases and Murphy's law will guarantee that the <acronym>SIM</acronym> will be empty
            when it is the most needed.</para>
        <para>An alternative method of control is to connect the device via a <acronym>USB</acronym>
            cable to a computer and send control instructions that way. This way the device can be
            set up in the wanted way and then be used, for example, as an alarm. This software will
            help to set up such a connection and allow the user to send command in meaningful
            English with a clear question/response based command language that do not require the
            user to remember an awkward syntax or the order of arguments. The drawback of this
            method is obviously - the device needs to be in physical proximity of a controlling
            computer.</para>
        <para>To simplify command handling it is possible to group commands together and give them a
            meaningful name as a user defined function. This could for example be used to set up a
            device to enable <acronym>GPRS</acronym> and start tracking using
                <acronym>TCP/IP</acronym> back to the server when the device is moved or disturbed
            with a single command and not having to remember any details or arguments. This is
            described in more detail in the section on presets (see <xref
                xlink:href="#section.using-presets"/>)</para>
        <para>The software can further more act as a recipient of location updates from the device
            (when it is put in tracking mode) sent over a <acronym>GPRS</acronym> link. Each
            location update is stored in a database which later on can be queried or exported in a
            number of different formats and can for example be shown on Google maps or similar
            programs (see <xref xlink:href="#cmd.db-export"/>).</para>
        <para>The location points can also be used to calculate the approximate distance travelled
            over any given time or show all locations where a given speed is exceeded (see <xref
                xlink:href="#cmd.db-dist"/>).</para>
        <para>One requirement to enable the device to send back location updates is of course that
            the device can contact the server. This will require the server to be accessible from
            the internet, and hence its IP address must be known.</para>
        <para>In a professional setting this is in general not a problem since most likely the ISP
            subscription is such that a professional server is assigned a static
                <acronym>IP</acronym> address that will remain fixed.</para>
        <para>However, most home user connect to the internet via a router/access point provided by
            their <acronym>ISP</acronym> and this access point most often have a dynamic
                <literal>IP</literal> address. This means that the <acronym>ISP</acronym> can and
            will change this address at will (even though in practice, the assigned address tends to
            stay the same for long period of times). Therefore it is not possible to store this
            address once in the device and always count on it to work. The best way to solve this is
            to register with a dynamic domain name server (<acronym>DDNS</acronym>) which keeps
            track on your assigned <acronym>IP</acronym> address. The device will then use the
                <acronym>DDNS</acronym> name assigned by the <acronym>DDNS</acronym> service and
            will get the corresponding <acronym>IP</acronym> address. </para>
        <para>It is out of the scope of this manual to give instructions on how to register your
            server (or more correctly your access point/router) with a <acronym>DDNS</acronym>
            service (there are both free and subscription based alternatives). Many routers/access
            points also has built-in support to automatically update a specified
                <acronym>DDNS</acronym> service when their IP address changes. </para>
        <para>Please remember though that connecting to this address only gets as far as the access
            point. If you have one or more computers that uses that access point you need to
            forwarded the connection to a specific server where you have the daemon installed. How
            to do this is dependent on the particular router/access point you are using but most
            likely it will be found under a menu named something like "<emphasis role="italic">Port
                forwarding</emphasis>". There you need to instruct the access point/router to
            forward packets arriving on port <literal>3400</literal> to your server. This is the
            default port number used by the daemon to receive location updates from the device (the
            port number used is also configurable, see <xref
                xlink:href="#appendix.configuring-the-daemon"/>)</para>
        <para>One key usage of the tracker is to act as a an alarm for all kinds of vehicle and
            large equipment. When the alarm conditions (specified by the user) are met the device
            will normally send a text message to one or more predefined phone numbers and can also
            have been setup to send a message over a <acronym>GPRS</acronym> link. In order to
            increase the chances that the alarm reaches the user the daemon can be set up to also
            send a mail on such event to one ore more predefined mail addresses. </para>
        <para>The daemon can also be setup to execute user specified action when it receives a
            specific alarm from the tracking device. This could for example be used to give
            audio/visual indication that an alarm has been triggered. </para>
        <para>
            <tip>
                <para>An easy way to give visual indication of alarm is to purchase a
                        <acronym>USB</acronym> controlled warning light (such as <link
                        xlink:href="http://www.delcomproducts.com/productdetails.asp?ProductNum=890604"
                    />) and use a small event script to control this light.</para>
            </tip>
        </para>
    </section>
    <section>
        <title>Who can use this software?</title>
        <para>In principal anyone - once the daemon has been installed and configured. We should
            however differentiate between the two roles of the <emphasis role="italic"
                >administrator</emphasis> (the person installing and configuring the software) and
            the <emphasis role="italic">end user</emphasis> (who uses the configured software to
            communicate with the device).</para>
        <para><emphasis role="bold">The role of the administrator.</emphasis></para>
        <para>Configuring and using a <acronym>GPS</acronym> tracker requires, almost by definition,
            a certain technical maturity and the same goes with this control daemon. It is a medium
            complex piece of software that requires the person installing and configuring the
            software to be familiar with concepts such as terminal usage, <acronym>TCP/IP</acronym>
            ports, <acronym>GPRS</acronym> configuration, file handling and mail setup (specifying
            an outgoing <acronym>SMTP</acronym> server). </para>
        <para>Unfortunately this can seem like a daunting task at first and unfortunately the
            software can only do so much automatically since it cannot know the
                <acronym>ISP</acronym> or what <acronym>SIM</acronym> card is used in the device are
            using or the necessary <acronym>SMTP</acronym> setup. Nevertheless, the daemon comes
            with a reasonable default configuration that tries to make the setup process as easy as
            possible given the overall complexity and clearly indicate the data that must be
            updated.</para>
        <para>An administrator should specifically shield the end user as much as possible from the
            technical details which for example can be done by providing a good set of defined
                <emphasis role="italic">presets</emphasis> (see <xref
                xlink:href="#section.using-presets"/>)</para>
        <para><emphasis role="bold">The role of the end user.</emphasis></para>
        <para>An end user will most likely only ever make use of the command line interface
                (<command>g7sh</command>) to send and receive data from the device. He or she
            therefor needs to be aware of the available commands as summarized in <xref
                xlink:href="#appendix.command-reference"/> (eventually the daemon will also
            incorporate a WEB-based UI).</para>
    </section>
    <section>
        <title>Available documentation</title>
        <para>The distribution comes with the following documentation</para>
        <itemizedlist>
            <listitem>
                <para>The <emphasis>Software Manual.</emphasis> The document you are currently
                    reading, contains both end user and administrator information.</para>
            </listitem>
            <listitem>
                <para>A Unix man page for the daemon "<literal>man g7ctrl</literal>". This is
                    installed together with the daemon.</para>
            </listitem>
            <listitem>
                <para>A Unix man page for the command shell "<literal>man g7sh</literal>". This is
                    installed together with the daemon.</para>
            </listitem>
        </itemizedlist>
        <para>In addition to this end user documentation there are developer documentation in the
            source tree at appropriate locations such as schema description of the database and
            various <filename>README</filename> files. For developers the repository also contains a
            set of <command>Doxygen</command> generated documentation for the source (this is
            however not included in the distributed <acronym>tar</acronym>-ball since it is of no
            use to an end user).</para>
    </section>
    <section>
        <title>Summary of functionality</title>
        <para>Below is a high level overview of what functionality this software offers. A more
            detailed description of all commands and functionality is available in the command
            reference section (see <xref xlink:href="#appendix.command-reference"/>).<itemizedlist>
                <listitem>
                    <para>Handle communication with the device over a <acronym>USB</acronym> cable
                        to both control and query the device. The commands set supports the complete
                        internal command set understood by the device.</para>
                </listitem>
                <listitem>
                    <para>Act as a control center that receives automatic location updates from the
                        device and stores them in a database. To have this functionality the device
                        must first be setup to send data over a <acronym>GPRS</acronym> connection
                        to the server.</para>
                </listitem>
                <listitem>
                    <para>Control the device over <acronym>TCP/IP</acronym> when the device has an
                        active <acronym>GPRS</acronym> connection. This allows controlling the
                        device remotely without having to use text messages. This can also allow
                        predefined actions to be performed on the device when certain events
                        occur.</para>
                </listitem>
                <listitem>
                    <para>Exporting the stored location data to several popular geo-location file
                        exchange formats such as <acronym>GPX</acronym> (<acronym>GPS</acronym>
                        Exchange Format) or <acronym>KML</acronym> (used by Google Earth).</para>
                </listitem>
                <listitem>
                    <para>Calculate the traveled distance for a set of locations.</para>
                </listitem>
                <listitem>
                    <para>The control center can send mails to one or more predefined addresses one
                        certain events such as alarms or notifications.</para>
                </listitem>
                <listitem>
                    <para>Send mail with attachment of exported (and compressed) track data. This
                        makes it easy to immediately gain access to tracked location even if the
                        server will not allow outside access to read an exported file.</para>
                </listitem>
                <listitem>
                    <para>Get regular mail updates on the status and location of the tracker</para>
                </listitem>
                <listitem>
                    <para>The ability to execute user specified functions on defined events received
                        from the device</para>
                </listitem>
                <listitem>
                    <para>Remote access to the daemon over a <acronym>TCP/IP</acronym> link. This
                        could allow an administrator to configure a device remotely for a co-worker
                        with no detailed technical knowledge of the device using the full
                        functionality of the software.</para>
                </listitem>
                <listitem>
                    <para>Setup predefined command sets to control the device</para>
                </listitem>
                <listitem>
                    <para>Ability to run user defined scripts as reaction to received tracker event
                        such as alarms which for example could be made to have the computer sound an
                        audible alarm.</para>
                </listitem>
            </itemizedlist></para>
    </section>
    <section xml:id="section.known-defects">
        <title>Limitations and known defects in 3.x series</title>
        <para>This lists known omissions and limitations in the current version. Some limitations
            might be lifted in future versions of the software.</para>
        <para>
            <note>
                <para>Dates are always specified in European format: </para>
                <para><literal>YYYY-MM-DD HH:MM:SS</literal></para>
            </note>
        </para>
        <section>
            <title>Minor limitations</title>
            <itemizedlist>
                <listitem>
                    <para>The daemon always assume PIN code on device is
                        "<literal>0000</literal>"</para>
                </listitem>
                <listitem>
                    <para>The daemon only supports <acronym>TCP/IP</acronym> connections from the
                        device and not <acronym>UDP</acronym>. In practice this is no limitation but
                        should be mentioned for completeness.</para>
                </listitem>
                <listitem>
                    <para>Live tracking of location event over <acronym>USB</acronym> is not
                        supported and there are no plans to support this use case. Tracking must be
                        done either to the server (over <acronym>GPRS TCP/IP</acronym>) or logged to
                        the device internal memory and then be downloaded over
                            <acronym>USB</acronym>. See <xref linkend="cmd.dlrec"/></para>
                </listitem>
                <listitem>
                    <para>The included shell (<command>g7sh</command>) for managing the daemon has a
                        buffer limit on 1MB of data to be received from the daemon. The only use
                        case when this is a limit in practice is for a user needing to do a
                            "<command>db head</command>" (or "<command>db tail</command>") and
                        display more than around 10,000 rows from the DB.</para>
                </listitem>
            </itemizedlist>
        </section>
        <section>
            <title>OSX limitations</title>
            <itemizedlist>
                <listitem>
                    <para>Applies only to OSX builds:</para>
                    <para>OSX does no longer ship with <acronym>GNU</acronym>
                        <command>readline</command> but with <acronym>BSD</acronym>
                        <command>libread</command> (for licensing reason). Unfortunately the
                        replacement library has (very) limited functionality compared to the
                        "original" and gives a poor working line editing experience. For full
                        functionality on OSX for the command shell please install the
                            <acronym>GNU</acronym> readline library. An easy way of doing this is to
                        use the "<emphasis role="italic">Homebrew</emphasis>" system (see <link
                            xlink:href="http://brew.sh"/>) which is an easy way to install multiple
                        native UNIX utilities and libraries. The configure will assume that the
                            <acronym>GNU</acronym>
                        <command>readline</command> library, if available, is installed to
                            "<filename>/usr/local/opt/readline</filename>".</para>
                </listitem>
                <listitem>
                    <para>Connecting a device over <acronym>USB</acronym> should be considered an
                        experimental feature on <productname>OSX</productname>. The
                            <acronym>USB</acronym> connection with devices can sometimes fail to be
                        established. So for working with <acronym>USB</acronym> connected devices a
                        Linux system is strongly recommended since on Linux <acronym>USB</acronym>
                        connections is both stable and reliable.</para>
                </listitem>
            </itemizedlist>
        </section>
    </section>
    <section>
        <title>Software License</title>
        <para>The software is copyright 2014-2015 Johan Persson and released under the GPL 3 license
            to ensure the full distribution and freedom (as in free speech - not as in free beer) .
            See <link xlink:href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</link>
            for more information.</para>
        <para>
            <programlisting>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see &lt;http://www.gnu.org/licenses/></programlisting>
        </para>
    </section>
    
</section>
